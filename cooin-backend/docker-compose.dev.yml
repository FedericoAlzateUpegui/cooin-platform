version: '3.8'

# Docker Compose configuration for Cooin Backend - Development
# Optimized for local development with hot reload

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cooin-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: cooin_dev_db
      POSTGRES_USER: cooin_dev
      POSTGRES_PASSWORD: cooin_dev_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./docker/postgres/init-dev.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cooin_dev -d cooin_dev_db"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - cooin-dev-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cooin-redis-dev
    restart: unless-stopped
    command: redis-server --requirepass cooin_dev_redis_password
    volumes:
      - redis_dev_data:/data
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - cooin-dev-network

  # Cooin Backend API - Development Mode
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: cooin-api-dev
    restart: unless-stopped
    environment:
      # Database
      DATABASE_URL: postgresql://cooin_dev:cooin_dev_password@postgres:5432/cooin_dev_db

      # Redis
      REDIS_URL: redis://:cooin_dev_redis_password@redis:6379/0

      # API Configuration
      SECRET_KEY: dev-secret-key-not-for-production
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      REFRESH_TOKEN_EXPIRE_DAYS: 7

      # Environment
      ENVIRONMENT: development
      DEBUG: true

      # CORS - Allow all origins in development
      ALLOWED_ORIGINS: "*"

      # File Upload
      MAX_FILE_SIZE: 10485760
      UPLOAD_DIRECTORY: /app/uploads

      # Development settings
      TESTING: false
      LOG_LEVEL: DEBUG

    volumes:
      # Mount source code for hot reload
      - .:/app
      - uploads_dev_data:/app/uploads
      - logs_dev_data:/app/logs
      # Exclude node_modules and cache directories
      - /app/__pycache__
      - /app/.pytest_cache
    ports:
      - "8001:8000"  # Different port for development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - cooin-dev-network

  # Database Migrations - Development
  migrations:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: cooin-migrations-dev
    environment:
      DATABASE_URL: postgresql://cooin_dev:cooin_dev_password@postgres:5432/cooin_dev_db
    command: ["alembic", "upgrade", "head"]
    depends_on:
      postgres:
        condition: service_healthy
    restart: "no"
    volumes:
      - .:/app
    networks:
      - cooin-dev-network

  # PGAdmin for database management (Development only)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: cooin-pgadmin-dev
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@cooin.dev
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - cooin-dev-network

  # Redis Commander for Redis management (Development only)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: cooin-redis-commander-dev
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:0:cooin_dev_redis_password
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - cooin-dev-network

  # Mailhog for email testing (Development only)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: cooin-mailhog-dev
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web interface
    networks:
      - cooin-dev-network

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  uploads_dev_data:
    driver: local
  logs_dev_data:
    driver: local

networks:
  cooin-dev-network:
    driver: bridge